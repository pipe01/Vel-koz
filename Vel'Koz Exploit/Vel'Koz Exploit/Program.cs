using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using EloBuddy;
using EloBuddy.SDK;
using EloBuddy.SDK.Constants;
using EloBuddy.SDK.Enumerations;
using EloBuddy.SDK.Events;

namespace Vel_Koz_Exploit
{
    class Program
    {

        private static Spell.Skillshot R;

        static void Main(string[] args)
        {
            Loading.OnLoadingComplete += Loading_OnLoadingComplete;
        }

        private static void Loading_OnLoadingComplete(EventArgs args)
        {
            if (Player.Instance.ChampionName != "Velkoz") return;

            R = new Spell.Skillshot(SpellSlot.R, 1575, SkillShotType.Linear);

            Obj_AI_Base.OnProcessSpellCast += PlayerOnOnProcessSpellCast;
            Game.OnTick += GameOnOnTick;
        }

        private static void GameOnOnTick(EventArgs args)
        {
            var target = TargetSelector.GetTarget(R.Range, DamageType.Magical);
            if (target == null) return;

            if (R.IsReady())
            {
                R.Cast(target);
            }
        }

        private static void PlayerOnOnProcessSpellCast(Obj_AI_Base sender, GameObjectProcessSpellCastEventArgs args)
        {
            if (!sender.IsMe) return;

            if (Orbwalker.ActiveModesFlags == Orbwalker.ActiveModes.Combo && R.IsReady() && args.SData.IsAutoAttack())
            {
                Core.DelayAction(() => R.Cast(args.Target.Position),20);
            }
        }



    }
}
